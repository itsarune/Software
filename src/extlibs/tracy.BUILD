cc_library(
    name = "tracy",
    srcs = glob([
        "zstd/**/*.cpp",
        "public/tracy/common/*.cpp",
        "common/*.cpp",
        "public/tracy/client/*.cpp",
        "server/*.cpp",
        "profiler/*.cpp",
        "public/tracy/libbacktrace/*.cpp",
        "imgui/*.cpp",
    ]),
    hdrs = ["public/tracy/Tracy.hpp"] + glob([
        "public/tracy/common/*.hpp",
        "public/tracy/common/*.h",
        "public/tracy/client/*.hpp",
        "profiler/**/*.hpp",
        "profiler/**/*.h",
        "zstd/**/*.h",
        "server/*.hpp",
        "server/*.h",
        "imgui/**/*.hpp",
        "imgui/**/*.h",
        "public/common/**/*.h",
        "public/common/**/*.hpp",
        "public/tracy/client/*.h",
        "public/tracy/libbacktrace/*.hpp",
        "public/tracy/libbacktrace/*.h",
    ]),
    includes = [
        "public/common",
        "public/tracy",
        "profiler/src/imgui",
        "public",
        "client",
        "common",
        "libbacktrace",
        "imgui",
        "/usr/include/freetype2",
        "/usr/include/libpng16",
        "/usr/include/capstone",
    ],
    linkopts = ["-pthread -ldl -lglfw -lfreetype -lcapstone"],
    linkstatic = True,
    alwayslink = True,
    defines = [
        "TRACY_ENABLED",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "tracy_server",
    srcs = glob([
        "profiler/**/*.cpp",
    ]),
    deps = [
        ":tracy",
    ],
    includes = [
        "public/common",
        "public/tracy",
        "profiler/src",
        "profiler/src/imgui",
        "imgui",
        "public",
        "client",
        "common",
        "libbacktrace",
        "/usr/include/freetype2",
        "/usr/include/libpng16",
        "/usr/include/capstone",
    ],
    linkstatic = True,
    linkopts = ["-pthread -ldl -lglfw -lfreetype -lcapstone"],
    visibility = ["//visibility:public"],
)
